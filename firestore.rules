rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    //functions global
    function isLogged() {
      return request.auth != null;
    }

    function hasFields(names) {
      return request.resource.data.keys().hasAll(names);
    }

    //mfes
    match /mfes/{mfe} {
      allow read: if false;
      allow create, write, update: if false;
    }

    match /{path=**}/publishers/{publisher} {
      allow read: if isLogged();
    }

    //congregation
    match /congregations/{congregation} {
      allow read: if isLogged();
      // allow write: if true;

      allow create: if isLogged() 
        && hasFields(['name'])
        && get(/databases/$(database)/documents/verifica/abc).data.permite == true;

      //publisher
      match /publishers/{publisher} {
        allow read: if isLogged();
        allow create, write, update: if false;
      }

      //groups
      match /groups/{groups} {
        allow read: if isLogged();

        allow write: if isLogged()
          && hasFields(['name']);
      }
    }
  }
}